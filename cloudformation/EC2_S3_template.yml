AWSTemplateFormatVersion: '2010-09-09'
Description: Application Layer Template

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Create a new KeyPair
          Parameters:
            - KeyPairName
            - KeyPairType
      - Label:
          default: EC2 configration
          Parameters:
            - ImageId
            - InstanceTypeParameter
            - EC2InstanceVolumeType
            - EC2InstanceVolumeSize

      - Label:
          default: S3Bucket configration
          Parameters:
            - S3BucketName


Parameters:
#--------------------------------------#
#KeyPair Parameters
#--------------------------------------#
  KeyPairName:
    Type: String
    Default: myCFnKeyPair  
  KeyPairType:
    Type: String
    Default: rsa
#--------------------------------------#
#EC2 Parameters
#--------------------------------------#
  EC2InstanceVolumeType:
    Type: String
    Default: gp2  
  EC2InstanceVolumeSize:
    Type: String
    Default: 16
  ImageId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-x86_64-gp2
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
    Description: Enter t2.micro or t2.small.

#--------------------------------------#
#S3 Parameters
#--------------------------------------#
  S3BucketName:
    Type: String
    Default: s3tanazawa202207

Resources:
#--------------------------------------#
#Create KeyPair
#--------------------------------------#
  KeyPair:
      Type: AWS::EC2::KeyPair
      Properties: 
        KeyName: !Ref KeyPairName
        KeyType: !Ref KeyPairType
        Tags: 
          - Key: Name
            Value: !Ref KeyPairName
#--------------------------------------#
#Create EC2 Instances
#--------------------------------------#
  EC2InstanceA:
    Type: AWS::EC2::Instance
    Properties: 
      AvailabilityZone: ap-northeast-1a
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            DeleteOnTermination: true
            VolumeType: !Ref EC2InstanceVolumeType
            VolumeSize: !Ref EC2InstanceVolumeSize
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref KeyPair
      SecurityGroupIds: 
        - !ImportValue EC2-SecurityGroup
      SubnetId: !ImportValue PublicSubnetA
      Tags: 
        - Key: Name
          Value: EC2instanceA

  EC2InstanceC:
    Type: AWS::EC2::Instance
    Properties: 
      AvailabilityZone: ap-northeast-1c
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            DeleteOnTermination: true
            VolumeType: !Ref EC2InstanceVolumeType
            VolumeSize: !Ref EC2InstanceVolumeSize
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref KeyPair
      SecurityGroupIds: 
        - !ImportValue EC2-SecurityGroup
      SubnetId: !ImportValue PublicSubnetC
      Tags: 
        - Key: Name
          Value: EC2instanceC

#--------------------------------------#
#Create S3Bucket
#--------------------------------------#
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketName
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      VersioningConfiguration:
        Status: Enabled

Outputs:
  EC2InstanceA:
    Description: EC2InstanceA
    Value: !Ref EC2InstanceA
    Export:
      Name: EC2InstanceA

  EC2InstanceC:
    Description: EC2InstanceC
    Value: !Ref EC2InstanceC
    Export:
      Name: EC2InstanceC

