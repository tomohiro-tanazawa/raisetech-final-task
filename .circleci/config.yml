version: 2.1

# jobs stepsの実行環境を定義
executors:
  deploy_container:
    docker:
      - image: circleci/python:3.8.7
    working_directory: /tmp

orbs:
  aws-cli: circleci/aws-cli@3.1.1
  ansible-playbook: orbss/ansible-playbook@0.0.5

jobs:
  execute-cloudformation:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_DEFAULT_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - run:
          name: deploy Cloudformation
          command: |
            set -x
            aws cloudformation deploy --stack-name NetworkStackFromCircleCI --template-file cloudformation/Network_template.yml
            aws cloudformation deploy --stack-name EC2andALBSecurityGroupStackFromCircleCI --template-file cloudformation/EC2andALBSG_template.yml
            aws cloudformation deploy --stack-name RDSSecurityGroupStackFromCircleCI --template-file cloudformation/RDSSG_template.yml
            aws cloudformation deploy --stack-name EC2andS3StackFromCircleCI --template-file cloudformation/EC2_S3_template.yml          
            aws cloudformation deploy --stack-name RDSStackFromCircleCI --template-file cloudformation/RDS_template.yml
            aws cloudformation deploy --stack-name ALBFromCircleCI --template-file cloudformation/ALB_template.yml
          no_output_timeout: 15m
      
      - run: mkdir -p workspace
      - run:
          command: |
            var1=$(aws cloudformation describe-stacks --stack-name RDSStackFromCircleCI --query "Stacks[].Outputs[].[OutputValue]" --output text)
            echo "rds_endpoint: ${var1}" > workspace/rds-output.yml
            echo "master_key: ${MASTER_KEY}" > workspace/master_key.yml

      - persist_to_workspace: # workspaceを作成
          root: workspace # 絶対パスまたはworking_directoryからの相対パスを記述
          paths: 
            - rds-output.yml # 上記rootからの相対パスを記述
            - master_key.yml
      
  execute-ansible:
    executor: ansible-playbook/default
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace # 絶対パスまたはworking_directoryからの相対パスを記述
      - run: |
          cp /tmp/workspace/rds-output.yml ~/project/ansible/roles/database/vars/main.yml
          cp /tmp/workspace/master_key.yml ~/project/ansible/roles/rails/vars/main.yml
      - add_ssh_keys:
          fingerprints:
            - 7f:fc:97:1b:2f:8c:d6:53:e5:02:ef:35:c9:3d:c2:e0
      - ansible-playbook/install:
          version: 2.10.7
      - ansible-playbook/playbook:
          playbook: ansible/playbook.yml
          playbook-options: -u ec2-user -i ansible/inventory --private-key ~/.ssh/id_rsa

  execute-serverspec:
    docker:
      - image: cimg/ruby:3.1.2
    steps:
      - checkout
      - run:
          name: install serverspec
          command: | 
            gem install serverspec
            gem install ed25519 -v '1.3'
            gem install bcrypt_pbkdf -v '1.0'

      - add_ssh_keys:
          fingerprints:
            - 7f:fc:97:1b:2f:8c:d6:53:e5:02:ef:35:c9:3d:c2:e0
      - run:
          name: edit ~/.ssh/config
          command: | 
            cd serverspec
            cat ssh_config_for_circleci > ~/.ssh/config
      - run:
          name: execute serverspec
          command: |
            cd serverspec
            rake spec





workflows:
  raisetech-task-final:
    jobs:
  #     - execute-cloudformation
  #     - execute-ansible:
  #         requires:
  #           - "execute-cloudformation"
      - execute-serverspec
          # requires:
          #   - "execute-cloudformation"
          #   - "execute-ansible"